doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title MWF Manager Dashboard
    link(rel='stylesheet', href='/css/manager-dashboard.css')
    link(href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css' rel='stylesheet')
    script(src='https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js')

  body
    // --- TOP NAVBAR ---
    nav.navbar
      .navbar-brand
        img.navbar-logo(src="/images/mwf-logo.png", alt="MWF Logo")
        span MWF Management 
      .navbar-user
        span Manager: Joseline
        a.btn.btn-outline-light.ms-3(href='/logout') Logout

    // --- MAIN LAYOUT CONTAINER ---
    .main-container
      aside.sidebar
        h4 Navigation
        ul.sidebar-menu
          li.active
            a(href='/')
              i.bi.bi-house-door-fill.me-2
              | Index
          li
            a(href='/stocklist')
              i.bi.bi-box-seam.me-2
              | Stock Management
          li
            a(href='/stock-records')
              i.bi.bi-clipboard-data.me-2
              | Stock Records
          li
            a(href='/salestable')
              i.bi.bi-receipt-cutoff.me-2
              | Sales List
          li
            a(href='/reports')
              i.bi.bi-bar-chart-line.me-2
              | Stock & Sale Report
          li
            a(href='/product-list')
              i.bi.bi-list-ul.me-2
              | Product List
          li
            a(href='/dashboard/suppliers')
              i.bi.bi-truck.me-2
              | Suppliers & Sourcing
          li
            a(href='/register-attendant')
              i.bi.bi-person-plus.me-2
              | Register Attendant
          li
            a(href='/users')
              i.bi.bi-people.me-2
              | Staff Management
          li
            a(href='/manage-users')
              i.bi.bi-gear.me-2
              | Manage Users
          li
            a(href='/agent-dashboard')
              i.bi.bi-gear.me-2
              | Attendant Dashboard
          li
            a(href='/pos')
              i.bi.bi-cash-coin.me-2
              | POS
          li
            a(href='/todo')
              i.bi.bi-check2-square.me-2
              | TO DO
          li
            a(href='/open-orders')
              i.bi.bi-clipboard-check.me-2
              | Open Orders

      main.content
        h1 Manager Overview & KPIs

        // --- KPI CARDS ---
        .insights-grid
          .insight-card.revenue
            p Total Revenue (30 Days)
            span UGX #{totalRevenue ? totalRevenue.toLocaleString() : 0}
          .insight-card.profit
            p Gross Profit (30 Days)
            span UGX #{grossProfit ? grossProfit.toLocaleString() : 0}
          .insight-card.capital
            p Capital in Stock
            span UGX #{capitalInStock ? capitalInStock.toLocaleString() : 0}
          .insight-card.out-of-stock
            p Out of Stock Items
            if productsOutOfStock && productsOutOfStock.length
              ul.out-of-stock-list
                each product in productsOutOfStock
                  li= product.name
            else
              span 0
          .insight-card.orders
            p Total Open Orders
            span #{totalOpenOrders || 0}
          .insight-card.attendants
            p Registered Attendants
            span #{totalAttendants || 0}
          .insight-card.suppliers
            p Active Suppliers
            span #{totalSuppliers || 0}
          .insight-card.losses
            p Total Losses (30 Days)
            span UGX #{totalLosses ? totalLosses.toLocaleString() : 0}

        // --- GRAPH/CHART ---
        .card.chart-area
          h2 Sales Trend (Last 7 Days)
          canvas#salesChart(width='400', height='150')

        //  RECENT ACTIVITY GRID 
        .recent-activity-grid
          // Recent Sales Card
          .card
            h2 Recent Sales Activity 
            table.summary-table
              thead
                tr
                  th Customer
                  th Product 
                  th Quantity
                  th Total Price (UGX)
              tbody
                if recentSales && recentSales.length
                  each sale in recentSales
                    tr
                      td= sale.customerName || 'Unknown'
                      td= sale.product ? sale.product.name : 'N/A'
                      td= sale.quantity || 0
                      td= sale.totalPrice ? sale.totalPrice.toLocaleString() : 0
                else
                  tr
                    td(colspan='4') No recent sales recorded.

          // Low Stock Alert Card
          .card
            h2 Low Stock Alert 
            table.summary-table
              thead
                tr
                  th Product Name
                  th Type
                  th Quantity
                  th Supplier
              tbody
                if stockSummary && stockSummary.length
                  each product in stockSummary
                    if product.quantity <= 10 && product.quantity > 0
                      tr.low-stock-row
                        td= product.name || 'N/A'
                        td= product.type || 'N/A'
                        td= product.quantity || 0
                        td= product.supplier || 'Unknown'
                else
                  tr
                    td(colspan='4') All stock levels appear healthy!

        // --- EXPENSE TRACKER SECTION ---
        .card.mt-5
          h2.mb-3 Expense Tracker
          form#expenseForm(action="/dashboard/expenses/add" method="POST" class="mb-4" novalidate)
            .mb-4
              input#description.form-control(type="text" name="description" placeholder="Description")
              small#errorDescription.error-message

            .mb-4
              input#amount.form-control(type="number" name="amount" placeholder="Amount (UGX)")
              small#errorAmount.error-message

            .mb-4
              select#category.form-select(name="category")
                option(value="") Select Category
                option(value="Supplies") Supplies
                option(value="Transport") Transport
                option(value="Maintenance") Maintenance
                option(value="Utilities") Utilities
                option(value="Wages") Wages
                option(value="Others") Others
              small#errorCategory.error-message

            .mb-4
              button.btn.btn-success(type="submit") Add Expense

          // Expense Table
          if expenses && expenses.length
            table.table.table-striped.table-bordered.mt-3
              thead.table-dark
                tr
                  th Description
                  th Amount
                  th Category
                  th Date
                  th Action
              tbody
                each e in expenses
                  tr
                    td= e.description
                    td UGX #{e.amount.toLocaleString()}
                    td= e.category
                    td= e.createdAt.toDateString()
                    td
                      form(action=`/dashboard/expenses/delete/${e._id}` method="POST")
                        button.btn.btn-danger.btn-sm(type="submit") Delete
          else
            p.text-muted.mt-3 No expenses recorded yet.

          h3.mt-4.total-spending-text.text-end Total Spending: UGX #{total.toLocaleString()}

          if summary && Object.keys(summary).length
            .mt-3
              h5 Category Breakdown:
              ul.list-group
                each val, key in summary
                  li.list-group-item.d-flex.justify-content-between.align-items-center
                    span= key
                    span UGX #{val.toLocaleString()}
          else
            p.text-muted No spending summary available yet.

    // --- PASS DATA TO FRONTEND JS ---
    script.
      const chartLabels = !{chartLabels};
      const chartRevenue = !{chartRevenue};
      const chartTransactions = !{chartTransactions};

    // EXPENSE FORM VALIDATION
    script.
      document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("expenseForm");
        const description = document.getElementById("description");
        const amount = document.getElementById("amount");
        const category = document.getElementById("category");

        const errDescription = document.getElementById("errorDescription");
        const errAmount = document.getElementById("errorAmount");
        const errCategory = document.getElementById("errorCategory");

        function clearErrors() {
          [errDescription, errAmount, errCategory].forEach(el => el.textContent = "");
          [description, amount, category].forEach(el => el.classList.remove("error"));
        }

        form.addEventListener("submit", (e) => {
          clearErrors();
          let valid = true;

          // Description
          if (!description.value.trim()) {
            errDescription.textContent = "Please enter a description.";
            description.classList.add("error");
            valid = false;
          }

          // Amount
          const amtValue = parseFloat(amount.value);
          if (!amount.value.trim() || isNaN(amtValue) || amtValue <= 0) {
            errAmount.textContent = "Please enter a valid amount greater than 0.";
            amount.classList.add("error");
            valid = false;
          }

          // Category
          if (!category.value) {
            errCategory.textContent = "Please select a category.";
            category.classList.add("error");
            valid = false;
          }

          if (!valid) e.preventDefault();
        });

        // Clear errors as user types
        [description, amount, category].forEach(el => {
          el.addEventListener("input", clearErrors);
          el.addEventListener("change", clearErrors);
        });
      });

    script(src='/js/manager-dashboard.js', defer)
